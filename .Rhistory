lqr_vec = append(lqr_vec,crps_lqr)
}
result_df = data.frame(cbind(dvine_vec,rq_vec,lqr_vec))
colnames(result_df)=c("D-vine","Linear Regression","Robust Regression")
return(result_df)
}
crps_list_L2015 = read_multi4_crps_result(1,int_source)
crps_list_L2016 = read_multi4_crps_result(2,int_source)
crps_list_L2017 = read_multi4_crps_result(3,int_source)
crps_list_L2018 = read_multi4_crps_result(4,int_source)
crps_multi4_imp <- bind_rows(
list(df1=melt(crps_list_L2015),
df2=melt(crps_list_L2016),
df3=melt(crps_list_L2017),
df4=melt(crps_list_L2018)),
.id = 'source')
names(crps_multi4_imp) = c("simulation","method","crps")
crps_multi4_imp_names = c("Hierarchical, L2015",
"Hierarchical, L2016",
"Hierarchical, L2017",
"Hierarchical, L2018")
names(crps_multi4_imp_names)=c("df1","df2","df3","df4")
crps_multi4_imp$simulation =
crps_multi4_imp_names[crps_multi4_imp$simulation]
crps_multi4_imp$method =
factor(crps_multi4_imp$method, levels = unique(crps_multi4_imp$method))
crps_multi4_imp$simulation =
factor(crps_multi4_imp$simulation, levels = unique(crps_multi4_imp$simulation))
ggplot(data = crps_multi4_imp)+
geom_boxplot(mapping=aes(group=method,x=crps,y=method),outlier.size = 0.7)+
facet_wrap(~ simulation, ncol = 2, nrow = 2)+
# ggtitle("RMSE of repeated simulations")+
ylab("Imputation methods")+xlab("CRPS")+
scale_y_discrete(limits = rev(levels(crps_multi4_imp$method)))+
theme_grey(base_size = 15)
read_multi4_coverage_prob_result = function(u=1,int_source){
dvine_vec=c();rq_vec=c();lqr_vec=c();
for(i in 1:100){
int_path = paste(int_source,i,sep = "")
x_sim = readRDS(paste(int_path,'/x_sim.rdata',sep = ""))
x_rep = readRDS(paste(int_path,'/x_rep.rdata',sep = ""))
missvec = seq(length(x_rep[,u]))[is.na(x_rep[,u])]
x_impute_dvinemed_005 =
readRDS(paste(int_path,'/x_impute_dvinemed_005.rdata',sep = ""))
x_impute_dvinemed_095 =
readRDS(paste(int_path,'/x_impute_dvinemed_095.rdata',sep = ""))
x_impute_rq_005=readRDS(paste(int_path,'/x_impute_rq_005.rdata',sep = ""))
x_impute_rq_095=readRDS(paste(int_path,'/x_impute_rq_095.rdata',sep = ""))
x_impute_lqr_005=readRDS(paste(int_path,'/x_impute_lqr_005.rdata',sep = ""))
x_impute_lqr_095=readRDS(paste(int_path,'/x_impute_lqr_095.rdata',sep = ""))
coverage_prob_dvine = rcp(x_sim[missvec,u],
x_impute_dvinemed_005[missvec,u],
x_impute_dvinemed_095[missvec,u])
coverage_prob_rq = rcp(x_sim[missvec,u],x_impute_rq_005[missvec,u],
x_impute_rq_095[missvec,u])
coverage_prob_lqr = rcp(x_sim[missvec,u],x_impute_lqr_005[missvec,u],
x_impute_lqr_095[missvec,u])
dvine_vec = append(dvine_vec,coverage_prob_dvine)
rq_vec = append(rq_vec,coverage_prob_rq)
lqr_vec = append(lqr_vec,coverage_prob_lqr)
}
result_df = data.frame(cbind(dvine_vec,rq_vec,lqr_vec))
colnames(result_df)=c("D-vine","Linear Regression","Robust Regression")
return(result_df)
}
coverage_prob_list_L2015 = read_multi4_coverage_prob_result(1,int_source)
coverage_prob_list_L2016 = read_multi4_coverage_prob_result(2,int_source)
coverage_prob_list_L2017 = read_multi4_coverage_prob_result(3,int_source)
coverage_prob_list_L2018 = read_multi4_coverage_prob_result(4,int_source)
coverage_prob_multi4_imp <- bind_rows(
list(df1=melt(coverage_prob_list_L2015),
df2=melt(coverage_prob_list_L2016),
df3=melt(coverage_prob_list_L2017),
df4=melt(coverage_prob_list_L2018)),
.id = 'source')
names(coverage_prob_multi4_imp) = c("simulation","method","coverage_prob")
coverage_prob_multi4_imp_names = c("Hierarchical, L2015",
"Hierarchical, L2016",
"Hierarchical, L2017",
"Hierarchical, L2018")
names(coverage_prob_multi4_imp_names)=c("df1","df2","df3","df4")
coverage_prob_multi4_imp$simulation =
coverage_prob_multi4_imp_names[coverage_prob_multi4_imp$simulation]
coverage_prob_multi4_imp$method =
factor(coverage_prob_multi4_imp$method, levels = unique(coverage_prob_multi4_imp$method))
coverage_prob_multi4_imp$simulation =
factor(coverage_prob_multi4_imp$simulation, levels = unique(coverage_prob_multi4_imp$simulation))
ggplot(data = coverage_prob_multi4_imp)+
geom_boxplot(mapping=aes(group=method,x=coverage_prob,y=method),outlier.size = 0.7)+
facet_wrap(~ simulation, ncol = 2, nrow = 2)+
# ggtitle("RMSE of repeated simulations")+
ylab("Imputation methods")+xlab("Relative Coverage probability")+
scale_y_discrete(limits = rev(levels(coverage_prob_multi4_imp$method)))+
theme_grey(base_size = 15)
read_multi4_sharpness_result = function(u=1,int_source){
dvine_vec=c();rq_vec=c();lqr_vec=c();
for(i in 1:100){
int_path = paste(int_source,i,sep = "")
x_sim = readRDS(paste(int_path,'/x_sim.rdata',sep = ""))
x_rep = readRDS(paste(int_path,'/x_rep.rdata',sep = ""))
missvec = seq(length(x_rep[,u]))[is.na(x_rep[,u])]
x_impute_dvinemed_005 =
readRDS(paste(int_path,'/x_impute_dvinemed_005.rdata',sep = ""))
x_impute_dvinemed_095 =
readRDS(paste(int_path,'/x_impute_dvinemed_095.rdata',sep = ""))
x_impute_rq_005=readRDS(paste(int_path,'/x_impute_rq_005.rdata',sep = ""))
x_impute_rq_095=readRDS(paste(int_path,'/x_impute_rq_095.rdata',sep = ""))
x_impute_lqr_005=readRDS(paste(int_path,'/x_impute_lqr_005.rdata',sep = ""))
x_impute_lqr_095=readRDS(paste(int_path,'/x_impute_lqr_095.rdata',sep = ""))
sharpness_dvine = sharpness(x_impute_dvinemed_005[missvec,u],
x_impute_dvinemed_095[missvec,u])
sharpness_rq = sharpness(x_impute_rq_005[missvec,u],
x_impute_rq_095[missvec,u])
sharpness_lqr = sharpness(x_impute_lqr_005[missvec,u],
x_impute_lqr_095[missvec,u])
dvine_vec = append(dvine_vec,sharpness_dvine)
rq_vec = append(rq_vec,sharpness_rq)
lqr_vec = append(lqr_vec,sharpness_lqr)
}
result_df = data.frame(cbind(dvine_vec,rq_vec,lqr_vec))
colnames(result_df)=c("D-vine","Linear Regression","Robust Regression")
return(result_df)
}
sharpness_list_L2015 = read_multi4_sharpness_result(1,int_source)
sharpness_list_L2016 = read_multi4_sharpness_result(2,int_source)
sharpness_list_L2017 = read_multi4_sharpness_result(3,int_source)
sharpness_list_L2018 = read_multi4_sharpness_result(4,int_source)
sharpness_multi4_imp <- bind_rows(
list(df1=melt(sharpness_list_L2015),
df2=melt(sharpness_list_L2016),
df3=melt(sharpness_list_L2017),
df4=melt(sharpness_list_L2018)),
.id = 'source')
names(sharpness_multi4_imp) = c("simulation","method","sharpness")
sharpness_multi4_imp_names = c("Hierarchical, L2015",
"Hierarchical, L2016",
"Hierarchical, L2017",
"Hierarchical, L2018")
names(sharpness_multi4_imp_names)=c("df1","df2","df3","df4")
sharpness_multi4_imp$simulation =
sharpness_multi4_imp_names[sharpness_multi4_imp$simulation]
sharpness_multi4_imp$method =
factor(sharpness_multi4_imp$method, levels = unique(sharpness_multi4_imp$method))
sharpness_multi4_imp$simulation =
factor(sharpness_multi4_imp$simulation, levels = unique(sharpness_multi4_imp$simulation))
ggplot(data = sharpness_multi4_imp)+
geom_boxplot(mapping=aes(group=method,x=sharpness,y=method),outlier.size = 0.7)+
facet_wrap(~ simulation, ncol = 2, nrow = 2)+
# ggtitle("RMSE of repeated simulations")+
ylab("Imputation methods")+xlab("Sharpness")+
scale_y_discrete(limits = rev(levels(sharpness_multi4_imp$method)))+
theme_grey(base_size = 15)
read_multi4_interval_score_result = function(u=1,int_source){
dvine_vec=c();rq_vec=c();lqr_vec=c();
for(i in 1:100){
int_path = paste(int_source,i,sep = "")
x_sim = readRDS(paste(int_path,'/x_sim.rdata',sep = ""))
x_rep = readRDS(paste(int_path,'/x_rep.rdata',sep = ""))
missvec = seq(length(x_rep[,u]))[is.na(x_rep[,u])]
x_impute_dvinemed_005 =
readRDS(paste(int_path,'/x_impute_dvinemed_005.rdata',sep = ""))
x_impute_dvinemed_095 =
readRDS(paste(int_path,'/x_impute_dvinemed_095.rdata',sep = ""))
x_impute_rq_005=readRDS(paste(int_path,'/x_impute_rq_005.rdata',sep = ""))
x_impute_rq_095=readRDS(paste(int_path,'/x_impute_rq_095.rdata',sep = ""))
x_impute_lqr_005=readRDS(paste(int_path,'/x_impute_lqr_005.rdata',sep = ""))
x_impute_lqr_095=readRDS(paste(int_path,'/x_impute_lqr_095.rdata',sep = ""))
interval_score_dvine = interval_score(x_sim[missvec,u],
x_impute_dvinemed_005[missvec,u],
x_impute_dvinemed_095[missvec,u])
interval_score_rq = interval_score(x_sim[missvec,u],x_impute_rq_005[missvec,u],
x_impute_rq_095[missvec,u])
interval_score_lqr = interval_score(x_sim[missvec,u],x_impute_lqr_005[missvec,u],
x_impute_lqr_095[missvec,u])
dvine_vec = append(dvine_vec,interval_score_dvine)
rq_vec = append(rq_vec,interval_score_rq)
lqr_vec = append(lqr_vec,interval_score_lqr)
}
result_df = data.frame(cbind(dvine_vec,rq_vec,lqr_vec))
colnames(result_df)=c("D-vine","Linear Regression","Robust Regression")
return(result_df)
}
interval_score_list_L2015 = read_multi4_interval_score_result(1,int_source)
interval_score_list_L2016 = read_multi4_interval_score_result(2,int_source)
interval_score_list_L2017 = read_multi4_interval_score_result(3,int_source)
interval_score_list_L2018 = read_multi4_interval_score_result(4,int_source)
interval_score_multi4_imp <- bind_rows(
list(df1=melt(interval_score_list_L2015),
df2=melt(interval_score_list_L2016),
df3=melt(interval_score_list_L2017),
df4=melt(interval_score_list_L2018)),
.id = 'source')
names(interval_score_multi4_imp) = c("simulation","method","interval_score")
interval_score_multi4_imp_names = c("Hierarchical, L2015",
"Hierarchical, L2016",
"Hierarchical, L2017",
"Hierarchical, L2018")
names(interval_score_multi4_imp_names)=c("df1","df2","df3","df4")
interval_score_multi4_imp$simulation =
interval_score_multi4_imp_names[interval_score_multi4_imp$simulation]
interval_score_multi4_imp$method =
factor(interval_score_multi4_imp$method, levels = unique(interval_score_multi4_imp$method))
interval_score_multi4_imp$simulation =
factor(interval_score_multi4_imp$simulation, levels = unique(interval_score_multi4_imp$simulation))
ggplot(data = interval_score_multi4_imp)+
geom_boxplot(mapping=aes(group=method,x=interval_score,y=method),outlier.size = 0.7)+
facet_wrap(~ simulation, ncol = 2, nrow = 2)+
# ggtitle("RMSE of repeated simulations")+
ylab("Imputation methods")+xlab("Interval Score")+
scale_y_discrete(limits = rev(levels(interval_score_multi4_imp$method)))+
theme_grey(base_size = 15)
metrics_4_dvine = scoring_metrics_4(x_logit_sim,x,x_hire_dvinemed_005,
x_hire_dvinemed_050,x_hire_dvinemed_095)
metrics_4_rq = scoring_metrics_4(x_logit_sim,x,x_hire_rq_005,
x_hire_rq_050,x_hire_rq_095)
metrics_4_lqr = scoring_metrics_4(x_logit_sim,x,x_hire_lqr_005,
x_hire_lqr_050,x_hire_lqr_095)
metrics_4_tmp = round(t(as.matrix(cbind(metrics_4_dvine,metrics_4_rq,metrics_4_lqr))),2)
colnames(metrics_4_tmp) <- rep(c("Cp.", "Sharpness", "Is.","CRPS"), times = 4)
rownames(metrics_4_tmp) <- c("D-vine Regression","Linear Regression","Robust Regression")
metrics_4_df <- rbind(metrics_4_tmp[, 1:8], metrics_4_tmp[, 9:16])
metrics_4_df
financials_raw_mono = financials_raw[,c(1:2,17:ncol(financials_raw)-1)]
financials_raw_mono <- financials_raw_mono[!is.na(financials_raw_mono$X2021), ]
ggmice::plot_pattern(financials_raw_mono[,-1:-2],rotate = TRUE,npat=10)
# ggmice::plot_pattern(financials_raw_mono[,-1:-2],rotate = TRUE,npat=10)
financials_raw_logit=financials_raw_mono
names(financials_raw_logit)=c("Identifier","Industry","L2015","L2016",
"L2017","L2018","L2019","L2020","L2021")
financials_raw_logit[,-1:-2] = logit_100(sapply(financials_raw_logit[, -1:-2], as.numeric))
ggmice::plot_pattern(financials_raw_logit[,-1:-2],rotate = TRUE,npat=10)
financials_step_dvinemed = inv_logit_100(readRDS('./data/financials_step_dvinemed_4.rdata'))
financials_step_dvinemean = inv_logit_100(readRDS('./data/financials_step_dvinemean_4.rdata'))
financials_step_lm = multi.impute(financials_raw_mono[,-1:-2],method = "lm")
financials_step_knn = multi.impute(financials_raw_mono[,-1:-2],method = "knn")
financials_step_rq = multi.impute(financials_raw_mono[,-1:-2],method = "rq")
financials_step_rlm = multi.impute(financials_raw_mono[,-1:-2],method = "rlm")
financials_step_lm = multi.impute(financials_raw_mono[,-1:-2],method = "lm")
financials_step_knn = multi.impute(financials_raw_mono[,-1:-2],method = "knn")
financials_step_rq = multi.impute(financials_raw_mono[,-1:-2],method = "rq")
financials_step_rlm = multi.impute(financials_raw_mono[,-1:-2],method = "rlm")
financials_hire_lm = multi.impute(financials_raw_mono[,-1:-2],method = "lm",order='hierarchy')
financials_hire_knn = multi.impute(financials_raw_mono[,-1:-2],method = "knn",order='hierarchy')
financials_hire_rq = multi.impute(financials_raw_mono[,-1:-2],method = "rq",order='hierarchy')
financials_hire_rlm = multi.impute(financials_raw_mono[,-1:-2],method = "rlm",order='hierarchy')
financials_hire_dvinemed = inv_logit_100(readRDS('./data/financials_hire_dvinemed_4.rdata'))
financials_hire_dvinemean = inv_logit_100(readRDS('./data/financials_hire_dvinemean_4.rdata'))
financials_raw_mono = financials_raw[,c(1:2,17:ncol(financials_raw)-1)]
financials_raw_mono <- financials_raw_mono[!is.na(financials_raw_mono$X2021), ]
ggmice::plot_pattern(financials_raw_mono[,-1:-2],rotate = TRUE,npat=10)
# ggmice::plot_pattern(financials_raw_mono[,-1:-2],rotate = TRUE,npat=10)
financials_raw_logit = financials_raw_mono
financials_raw_logit[,-1:-2] = logit_100(sapply(financials_raw_logit[, -1:-2], as.numeric))
ggmice::plot_pattern(financials_raw_logit[,-1:-2],rotate = TRUE,npat=10)
financials_step_dvinemed = inv_logit_100(multi.impute(financials_raw_logit[,-1:-2]))
financials_step_dvinemean = inv_logit_100(multi.impute(financials_raw_logit[,-1:-2],method = "dvinemean"))
financials_step_lm = multi.impute(financials_raw_mono[,-1:-2],method = "lm")
financials_step_knn = multi.impute(financials_raw_mono[,-1:-2],method = "knn")
financials_step_rq = multi.impute(financials_raw_mono[,-1:-2],method = "rq")
financials_step_rlm = multi.impute(financials_raw_mono[,-1:-2],method = "rlm")
financials_hire_dvinemed = inv_logit_100(multi.impute(financials_raw_logit[,-1:-2],order='hierarchy'))
financials_hire_dvinemean = inv_logit_100(multi.impute(financials_raw_logit[,-1:-2],
method = "dvinemean",order='hierarchy'))
financials_hire_lm = multi.impute(financials_raw_mono[,-1:-2],method = "lm",order='hierarchy')
financials_hire_knn = multi.impute(financials_raw_mono[,-1:-2],method = "knn",order='hierarchy')
financials_hire_rq = multi.impute(financials_raw_mono[,-1:-2],method = "rq",order='hierarchy')
financials_hire_rlm = multi.impute(financials_raw_mono[,-1:-2],method = "rlm",order='hierarchy')
financials_raw_logit_obs <- financials_raw_logit[, -1:-2] %>%
mutate(Method = "Observation")
financials_step_dvinemed$Method <- "D-vine Median"
financials_step_dvinemean$Method <- "D-vine Mean"
financials_step_lm$Method <- "Linear Regression"
financials_step_knn$Method <- "KNN"
financials_step_rq$Method <- "Robust Quantile"
financials_step_rlm$Method <- "Robust Regression"
financials_combined_step <- bind_rows(
financials_raw_logit_obs,
financials_step_dvinemed,
financials_step_dvinemean,
financials_step_lm,
financials_step_knn,
financials_step_rq,
financials_step_rlm
)
financials_combined_step$Method <- factor(financials_combined_step$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_step_long <- financials_combined_step %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_step_long <- financials_combined_step_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_step_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
financials_hire_dvinemed$Method <- "D-vine Median"
financials_hire_dvinemean$Method <- "D-vine Mean"
financials_hire_lm$Method <- "Linear Regression"
financials_hire_knn$Method <- "KNN"
financials_hire_rq$Method <- "Robust Quantile"
financials_hire_rlm$Method <- "Robust Regression"
financials_combined_hire <- bind_rows(
financials_raw_logit_obs,
financials_hire_dvinemed,
financials_hire_dvinemean,
financials_hire_lm,
financials_hire_knn,
financials_hire_rq,
financials_hire_rlm
)
financials_combined_hire$Method <- factor(financials_combined_hire$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_hire_long <- financials_combined_hire %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_hire_long <- financials_combined_hire_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_hire_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
financials_raw_obs <- financials_raw_mono[, -1:-2] %>%
mutate(Method = "Observation")
financials_step_dvinemed$Method <- "D-vine Median"
financials_step_dvinemean$Method <- "D-vine Mean"
financials_step_lm$Method <- "Linear Regression"
financials_step_knn$Method <- "KNN"
financials_step_rq$Method <- "Robust Quantile"
financials_step_rlm$Method <- "Robust Regression"
financials_combined_step <- bind_rows(
financials_raw_obs,
financials_step_dvinemed,
financials_step_dvinemean,
financials_step_lm,
financials_step_knn,
financials_step_rq,
financials_step_rlm
)
financials_combined_step$Method <- factor(financials_combined_step$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_step_long <- financials_combined_step %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_step_long <- financials_combined_step_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_step_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
financials_hire_dvinemed$Method <- "D-vine Median"
financials_hire_dvinemean$Method <- "D-vine Mean"
financials_hire_lm$Method <- "Linear Regression"
financials_hire_knn$Method <- "KNN"
financials_hire_rq$Method <- "Robust Quantile"
financials_hire_rlm$Method <- "Robust Regression"
financials_combined_hire <- bind_rows(
financials_raw_logit_obs,
financials_hire_dvinemed,
financials_hire_dvinemean,
financials_hire_lm,
financials_hire_knn,
financials_hire_rq,
financials_hire_rlm
)
financials_combined_hire$Method <- factor(financials_combined_hire$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_hire_long <- financials_combined_hire %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_hire_long <- financials_combined_hire_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_hire_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
financials_raw_obs <- financials_raw_mono[, -1:-2] %>%
mutate(Method = "Observation")
financials_step_dvinemed$Method <- "D-vine Median"
financials_step_dvinemean$Method <- "D-vine Mean"
financials_step_lm$Method <- "Linear Regression"
financials_step_knn$Method <- "KNN"
financials_step_rq$Method <- "Robust Quantile"
financials_step_rlm$Method <- "Robust Regression"
financials_combined_step <- bind_rows(
financials_raw_obs,
financials_step_dvinemed,
financials_step_dvinemean,
financials_step_lm,
financials_step_knn,
financials_step_rq,
financials_step_rlm
)
financials_combined_step$Method <- factor(financials_combined_step$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_step_long <- financials_combined_step %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_step_long <- financials_combined_step_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_step_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
financials_hire_dvinemed$Method <- "D-vine Median"
financials_hire_dvinemean$Method <- "D-vine Mean"
financials_hire_lm$Method <- "Linear Regression"
financials_hire_knn$Method <- "KNN"
financials_hire_rq$Method <- "Robust Quantile"
financials_hire_rlm$Method <- "Robust Regression"
financials_combined_hire <- bind_rows(
financials_raw_obs,
financials_hire_dvinemed,
financials_hire_dvinemean,
financials_hire_lm,
financials_hire_knn,
financials_hire_rq,
financials_hire_rlm
)
financials_combined_hire$Method <- factor(financials_combined_hire$Method, levels = c(
"Robust Regression",
"Robust Quantile",
"KNN",
"Linear Regression",
"D-vine Mean",
"D-vine Median",
"Observation"
))
financials_combined_hire_long <- financials_combined_hire %>%
pivot_longer(cols = starts_with("X"), names_to = "Variable", values_to = "Value")
financials_combined_hire_long <- financials_combined_hire_long %>%
filter(Variable != "X2021")
ggplot(financials_combined_hire_long, aes(x = Value, y = Method, fill = Method)) +
geom_boxplot() +
facet_wrap(~ Variable, scales = "free") +
labs(x = "Value",
y = "Imputation Method") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
install.packages(c("devtools", "roxygen2"))
devtools::create("DvineImpute")
setwd("D:/TUM")
devtools::create("DvineImpute")
devtools::use_mit_license()
?lqr
??lqr
setwd("D:/TUM/DvineImpute")
devtools::document()
devtools::document()
devtools::check(
remote = TRUE,
manual = TRUE,
incoming = TRUE
)
devtools::check(
remote = TRUE,
manual = TRUE,
incoming = TRUE
)
?multi.impute
devtools::install_github("fghij24680/DvineImpute")
devtools::install_github("fghij24680/DvineImpute")
